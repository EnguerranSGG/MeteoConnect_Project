{"ast":null,"code":"var _jsxFileName = \"/Users/enguerransmagghe/Desktop/MeteoConnect_Project/src/components/Weather/ForecastWeather.jsx\",\n  _s = $RefreshSig$();\nimport parseWeatherData from \"../../helpers/weatherDataParser\";\nimport useWeatherData from \"../../hooks/useWeatherData\";\nimport formatDate from \"../../helpers/dateFormatter\";\nimport WeatherIcon from \"../../utils/weatherIcons\";\nimport \"./ForecastWeather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastWeather = () => {\n  _s();\n  const weatherData = useWeatherData();\n  const days = parseWeatherData(weatherData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecastContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pr\\xE9visions de la semaine :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast\",\n      children: days.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecastDay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"forecastDayDate\",\n          children: formatDate(day.date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"forecastDayIcon\",\n          children: /*#__PURE__*/_jsxDEV(WeatherIcon, {\n            code: day.weatherCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"forecastDayTemp\",\n          children: [((day.maxTemperature + day.minTemperature) / 2).toFixed(1), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(ForecastWeather, \"twUZxwom3ua6vb6jEw84Xj5YoQk=\", false, function () {\n  return [useWeatherData];\n});\n_c = ForecastWeather;\nexport default ForecastWeather;\nvar _c;\n$RefreshReg$(_c, \"ForecastWeather\");","map":{"version":3,"names":["parseWeatherData","useWeatherData","formatDate","WeatherIcon","jsxDEV","_jsxDEV","ForecastWeather","_s","weatherData","days","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","day","index","date","code","weatherCode","maxTemperature","minTemperature","toFixed","_c","$RefreshReg$"],"sources":["/Users/enguerransmagghe/Desktop/MeteoConnect_Project/src/components/Weather/ForecastWeather.jsx"],"sourcesContent":["import parseWeatherData from \"../../helpers/weatherDataParser\";\nimport useWeatherData from \"../../hooks/useWeatherData\";\nimport formatDate from \"../../helpers/dateFormatter\";\nimport WeatherIcon from \"../../utils/weatherIcons\";\nimport \"./ForecastWeather.css\";\n\nconst ForecastWeather = () => {\n  const weatherData = useWeatherData();\n  const days = parseWeatherData(weatherData);\n\n  return (\n    <div className=\"forecastContainer\">\n      <h3>Prévisions de la semaine :</h3>\n\n      <div className=\"forecast\">\n        {days.map((day, index) => (\n          <div className=\"forecastDay\" key={index}>\n            <h4 className=\"forecastDayDate\">{formatDate(day.date)}</h4>\n            <p className=\"forecastDayIcon\">\n              <WeatherIcon code={day.weatherCode} />\n            </p>\n            <p className=\"forecastDayTemp\">\n              {((day.maxTemperature + day.minTemperature) / 2).toFixed(1)}°C\n            </p>\n            <hr />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default ForecastWeather;\n"],"mappings":";;AAAA,OAAOA,gBAAgB,MAAM,iCAAiC;AAC9D,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,WAAW,GAAGP,cAAc,CAAC,CAAC;EACpC,MAAMQ,IAAI,GAAGT,gBAAgB,CAACQ,WAAW,CAAC;EAE1C,oBACEH,OAAA;IAAKK,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCN,OAAA;MAAAM,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnCV,OAAA;MAAKK,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBF,IAAI,CAACO,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnBb,OAAA;QAAKK,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BN,OAAA;UAAIK,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAET,UAAU,CAACe,GAAG,CAACE,IAAI;QAAC;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3DV,OAAA;UAAGK,SAAS,EAAC,iBAAiB;UAAAC,QAAA,eAC5BN,OAAA,CAACF,WAAW;YAACiB,IAAI,EAAEH,GAAG,CAACI;UAAY;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC,eACJV,OAAA;UAAGK,SAAS,EAAC,iBAAiB;UAAAC,QAAA,GAC3B,CAAC,CAACM,GAAG,CAACK,cAAc,GAAGL,GAAG,CAACM,cAAc,IAAI,CAAC,EAAEC,OAAO,CAAC,CAAC,CAAC,EAAC,OAC9D;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJV,OAAA;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAR0BG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASlC,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACR,EAAA,CAxBID,eAAe;EAAA,QACCL,cAAc;AAAA;AAAAwB,EAAA,GAD9BnB,eAAe;AAyBrB,eAAeA,eAAe;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}